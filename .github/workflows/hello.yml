name: Hello World

on:
  push:
    branches: [ "main" ]

jobs:
  hello:
    runs-on: self-hosted
    steps:    
      - name: Checkout repository
        uses: actions/checkout@v4

      
      - name: Print Hello
        run: echo "Hello World from GitHub Actions Runner!"

      - name: Build Docker image
        run: |
          docker build . \
            --file Dockerfile \
            --tag simplebankingsystem:latest \
            --tag simplebankingsystem:$(date +%s)

      
      - name: Run Docker Hello World
        run: docker run hello-world
        
      - name: Stop and remove old container if exists
        run: |
          if [ "$(docker ps -aq -f name=simplebankingsystem)" ]; then
            echo "Stopping old container..."
            docker stop simplebankingsystem || true
            echo "Removing old container..."
            docker rm simplebankingsystem || true
          fi
      
      - name: Run Docker Simple Banking System
        run: |
          docker run -d \
            --name simplebankingsystem \
            --restart unless-stopped \
            --network host \
            -p 8080:8080 \
            simplebankingsystem:latest
      
      - name: Run integration tests inside container
        run: |
          docker cp ./scripts/integration_test.sh simplebankingsystem:/integration_test.sh
          docker exec simplebankingsystem chmod +x /integration_test.sh
          docker exec simplebankingsystem /integration_test.sh          
            

      
      - name: Tag Docker image
        run: docker tag simplebankingsystem:latest 10.0.40.193:5000/team191/simplebankingsystem:latest

      - name: Push Docker image
        run: docker push 10.0.40.193:5000/team191/simplebankingsystem:latest

      - name: Build buildâ€‘stage image
        run: docker build . --target build -t simplebankingsystem-build
      
      - name: Extract compiled classes
        run: |
          container_id=$(docker create simplebankingsystem-build)
          mkdir -p target
          docker cp "$container_id":/app/target/classes ./target/classes
          docker rm "$container_id"


      - name: Run SonarQube analysis inside sonar image
        run: |
          docker run --rm \
            -e SONAR_HOST_URL=http://10.0.40.193:9000/ \
            -e SONAR_TOKEN=sqp_e21c5018f36294766e460f3e4f4891c1d12f1f97 \
            -v $(pwd):/usr/src \
            sonarsource/sonar-scanner-cli:latest \
              -Dsonar.projectKey=simplebankingsystem \
              -Dsonar.sources=. \
              -Dsonar.java.binaries=target/classes \
              -Dsonar.host.url=http://10.0.40.193:9000/ \
              -Dsonar.login=sqp_e21c5018f36294766e460f3e4f4891c1d12f1f97

      
      # --- Dokumentation bauen, testen, pushen ---
  
      - name: Build documentation image
        run: |
          DOC_IMG=10.0.40.193:5000/team191/simplebankingsystem-docs
          DOC_TAG="${GITHUB_REF_NAME//\//-}-${GITHUB_RUN_NUMBER}"
        
          docker build \
            --file docs/Dockerfile \
            --tag simplebankingsystem-docs:latest \
            --tag ${DOC_IMG}:latest \
            --tag ${DOC_IMG}:${DOC_TAG} \
            .
        
        - name: Smoke test documentation image
        run: |
          docker run --rm simplebankingsystem-docs:latest /bin/sh -lc '
            set -e
            ls -l /docs/Dokumentation.pdf
            test -f /docs/site/index.html && echo "Site OK"
          '
        
        - name: Push documentation image
        run: |
          DOC_IMG=10.0.40.193:5000/team191/simplebankingsystem-docs
          DOC_TAG="${GITHUB_REF_NAME//\//-}-${GITHUB_RUN_NUMBER}"
          docker push ${DOC_IMG}:latest
          docker push ${DOC_IMG}:${DOC_TAG}
        
        # (Optional) PDF als Pipeline-Artefakt aus dem Image exportieren:
        - name: Export Dokumentation.pdf as artifact
        run: |
          id=$(docker create simplebankingsystem-docs:latest)
          docker cp "$id":/docs/Dokumentation.pdf ./Dokumentation.pdf
          docker rm "$id"
        
        - name: Upload Dokumentation.pdf
        uses: actions/upload-artifact@v4
        with:
          name: Dokumentation.pdf
          path: Dokumentation.pdf
